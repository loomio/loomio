.motion.translate-parent{id:"motion-#{motion.id}"}
  .motion-header-info
    %h3.motion-title.word-break= motion.name
    - if can? :edit, motion
      = link_to edit_motion_path(motion), class: 'cuke-edit-motion edit-icon-labelled' do
        %i.fa.fa-pencil
        = t :edit
    - if motion.closed?
      %span.label.label-important= t(:closed)
    .closing-info
      - if motion.voting?
        = t(:proposal_closing_when, when: time_ago_in_words(motion.closing_at))
      - else
        %span= t(:proposal_closed_when, when: time_ago_in_words(motion.closed_at))
    .proposed-by
      = t(:proposed_when_by_who, when: time_ago_in_words(motion.created_at), who: motion.author_name)


  -if motion.closed?
    .row
      .span5
        =render "motions/outcome_statement", motion: motion
  .row
    .span5
      .description
        .long-description
          = render_rich_text(motion.description, false)
        - if TranslationService.can_translate? motion
          = translate_link_for motion

  .row
    .span4.motion-header-info
      .clearfix
        .translation-spacer.translated
        %h3.motion-title.word-break.translated-title.translated
        .closing-info.translated
        .proposed-by.translated
  .row
    .span5
      .description.translated-description.translated
        = t(:loading_translation)

  .pie{id: "graph_#{motion.id}"}

  .percentage-to-vote
    - if motion.closed?
      = t :engagement_on_closed_proposal,
          percent: motion.percent_voted,
          numerator: (motion.group_size_when_voting - motion.members_not_voted_count),
          denominator:  motion.group_size_when_voting
    - else
      = t :engagement_on_open_proposal,
          percent: motion.percent_voted,
          numerator: (motion.group_size_when_voting - motion.members_not_voted_count),
          denominator:  motion.group_size_when_voting

  .votes
    - if motion.voting? && motion.user_has_not_voted?(current_user)
      %h3= t :state_your_position
      .vote-buttons.clearfix
        - Vote::POSITIONS.each do |position|
          = render 'motions/vote_button', motion: motion, position: position

    .votes-table
      %h3= t :positions
      - if motion.has_votes?
        - current_user_vote = motion.last_vote_by_user(current_user)
        - if current_user_vote
          = render 'motions/vote_row', vote: current_user_vote, motion: motion
        - (motion.grouped_unique_votes - [current_user_vote]).each do |vote|
          = render 'motions/vote_row', vote: vote, motion: motion

#yet-to-vote.hidden
  - motion.members_not_voted.each do |user|
    .position-row.clearfix
      .activity-icon= image_tag "questionmark.png"
      = link_to user.name, user_path(user), class: 'user-name'

= link_to t(:not_voted), '#', class: 'toggle-yet-to-vote'

= render('motions/motion_pie_javascript',
    diameter: 200,
    motion: motion,
    padding: 0,
    gap: 5,
    legend: 'true')
