.print-container
  .row.title
    .col-md-9
      %h1= @discussion.title
      .groups-title
        - if @group.is_subgroup?
          %h3= @group.parent.name
          = content_tag :span, "\u25B6", class: 'name-separator'
        %h3= @group.name
  .row.context
    .col-md-9
      = render_rich_text @discussion.description, @discussion.uses_markdown
    .col-md-2.col-md-offset-1
      .discussion-details
        = t("discussion_context.started_print",
            when: @discussion.created_at.strftime("%d %B %Y"),
            who: @discussion.author.name)
  - if @motions
    .row
      .col-md-12
        %h2= t :proposals
      - @motions.each do |motion|
        .col-md-9
          %h3= motion.title
          .proposal-description
            = render_rich_text motion.description, true
          .proposal-details
            %ul
              - if motion.voting?
                %li= t(:closing) + ": " + motion.closing_at.strftime("%d %B %Y, %I.%M %p %Z")
              - else
                %li= t(:closed_at) + ": " + motion.closed_at.strftime("%d %B %Y, %I.%M %p %Z")
              %li= t :proposed_by_who_on, when: motion.created_at.strftime("%d %B %Y, %I.%M %p %Z"), who: motion.author_name
            - if motion.has_outcome?
              %strong= t(:outcome) + ": "
              %span
                = motion.outcome
        .col-md-9
          .motion-graph.clearfix
            %canvas.pie{id: "graph_#{motion.id}", height: 150, width: 150}
            .legend
              .item.yes
                = t(:'position_verbs.yes')
                (#{motion.yes_votes_count})
              .item.abstain
                = t(:'position_verbs.abstain')
                (#{motion.abstain_votes_count})
              .item.no
                = t(:'position_verbs.no')
                (#{motion.no_votes_count})
              .item.block
                = t(:'position_verbs.block')
                (#{motion.block_votes_count})

              - if motion.closed?
                = t :engagement_on_closed_proposal,
                    percent: motion.percent_voted,
                    numerator: (motion.voters_count),
                    denominator:  motion.members_count
              - else
                = t :engagement_on_open_proposal,
                    percent: motion.percent_voted,
                    numerator: (motion.voters_count),
                    denominator:  motion.members_count
            = render('motions/motion_pie_javascript', motion: motion)
        .col-md-9
          %h3= t :positions
          %ul.positions
            - if motion.has_votes?
              - motion.grouped_unique_votes.each do |vote|
                %li
                  = image_tag display_proposal_activity_icons_for_print(vote)
                  %strong= vote.user_name
                  - if vote.statement.present?
                    %p= vote.statement
  - if @activity
    .row
      .col-md-9
        %h3= t :activity
        %ul.activity
          - filter_discussion_events(@activity).each do |event|
            - if event.kind == 'new_comment'
              %li.new-comment
                = render 'avatar', user: event.eventable.user
                %strong= event.eventable.user_name
                = render_rich_text event.eventable.body, event.eventable.uses_markdown?
                - if event.eventable.attachments.any?
                  %strong= t :attachments
                  %ul.attachments
                    - event.eventable.attachments.each do |attachment|
                      %li= attachment.location
                %p.timestamp= event.eventable.created_at.strftime("%d %B %Y, %I.%M %p")
            - else
              - item = DiscussionItem.new(event)
              %li
                = image_tag display_discussion_activity_icons_for_print(item)
                - unless item.actor.blank?
                  %strong= item.actor.name
                = item.header
                %p= item.body
                %p.timestamp= item.time.strftime("%d %B %Y, %I.%M %p")
