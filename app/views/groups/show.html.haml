- set_title @group.name, "", @group.parent

.group-heading{style: "background-image: url('#{@group.cover_photo.url(:desktop)}')"}
  = render 'application/flash_messages', :flash => flash, :on_landing_page => false
  - if can? :edit, @group
    .upload-button.cover-photo-upload
      = form_for @group, html: { multipart: true, class: 'js-submit-on-change' } do |f|
        = file_field_tag "group[cover_photo]"
        .edit-icon
          %i.fa.fa-pencil

  .group-logo{style: "background-image: url('#{@group.logo.url(:medium)}')"}

    - if can? :edit, @group
      .upload-button.logo-upload
        = form_for @group, html: { multipart: true, class: 'js-submit-on-change' } do |f|
          = file_field_tag "group[logo]"
          .edit-icon
            %i.fa.fa-pencil

  = render '/groups/title', group: @group, discussion: @discussion

.row
  .span9
    .group-description
      - if can? :edit, @group
        = link_to edit_group_path @group do
          .edit-icon.edit-group
            %i.fa.fa-pencil
          .edit-group-placeholder
      .logo-placeholder
      ~ render_rich_text(@group.description)
    .main-content
      =render 'discussions/discussion_list'

  .span3
    #group-actions
      - if can? :create, @discussion
        = icon_button(href: new_discussion_path(:group_id => @group.id), text: t(:start_a_discussion), icon: '/assets/topic-18.png', id: 'start-new-discussion', class: 'btn-grey')
      - if can?(:add_members, @group)
        = render 'invite_button', group: @group, discussion: @discussion
      = render 'options_dropdown', group: @group

      = join_group_button(@group)
    = render 'setup_next_steps' if show_next_steps?(@group)

    = render 'subgroups', group: @group

    - if @closed_motions.any?
      .sub-panel.previous-discussions-panel
        %h4= t(:previous_decisions)
        %ul.previous-decisions
          - @closed_motions.first(3).each do |motion|
            %li.previous-decision
              %a.selector-link{ href: motion_path(motion) }
                .clearfix
                  .pie.motion-sparkline
                    = motion_sparkline(motion)
                  .previous-decision-title.word-break=truncate(motion.name, :length => 60, :separator => ' ')
          = link_to t(:see_more), group_motions_path(@group), class: 'bottom-panel-link'

    =render 'membership_requests', group: @group
    =render 'members', group: @group
    =render '/application/closed_motions', user: nil, group: @group
