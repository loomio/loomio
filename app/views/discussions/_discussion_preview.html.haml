- discussion_reader = @discussion_reader_cache.get_for(discussion)
- unread_comments_count = discussion_reader.unread_comments_count
- motion = discussion.current_motion
- motion_reader = @motion_reader_cache.get_for(motion) if motion
- last_vote = @last_vote_cache.get_for(motion) if motion

.clearfix
  %div.discussion-preview{ class: css_classes_for_discussion_preview(discussion, discussion_reader) }
    %a.selector-discussion-link{ href: discussion_path(discussion) }
      - if user_signed_in? && motion
        .vote-icon
          - if can?(:vote, motion)
            .activity-icon{class: "position-#{last_vote.position}-icon"}

      .discussion-title
        = truncate(discussion.title, :length => 60, :separator => ' ')

        - if @group.nil?
          .group-name
            - if discussion.group.is_subgroup?
              = discussion.group.parent.name
              %span.name-separator
                â–¶
            = discussion.group.name

        - elsif @group != discussion.group
          .group-name= discussion.group_name

      - if motion
        .icon.shim{:id => "graph_#{motion.id}"}
          .motion-sparkline
            = motion_sparkline(motion)
          - if motion.voting? && motion_reader.unread_activity_count > 0
            %span.activity-count.label.label-info
              = motion_reader.unread_activity_count
      - else
        .large-icon.pie-icon.activity-icon

      - if unread_comments_count == 0
        .large-icon.discussion-icon.activity-icon.disabled-icon
      -else
        .large-icon.discussion-icon.activity-icon.enabled-icon
          %span.activity-count.label.label-info
            = unread_comments_count

      .discussion-date-info
        -if motion
          .proposal-close-date= t( :time_until_close, quantity_of_time: time_ago_in_words(motion.closing_at) )
        - else
          .latest-comment-time= t( :ago, quantity_of_time: time_ago_in_words(discussion.last_comment_at) )
