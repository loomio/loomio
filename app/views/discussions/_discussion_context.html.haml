.row
  .col-sm-8
    .description-container
      .description-body{dir: text_direction(@discussion)}
        .long-description
          = render_rich_text(@discussion.description, @discussion.uses_markdown)
        .translation-spacer.translated
        .translated-description.translated
          = t(:loading_translation)
        - if can?(:edit, @discussion)
          = link_to edit_discussion_path(@discussion) do
            %i.fa.fa-pencil
            = t :edit
        - if TranslationService.can_translate? @discussion
          = translate_link_for @discussion
  .col-sm-3.col-sm-offset-1.right-context
    - if can? :set_volume, @discussion
      - current_volume = @discussion_reader.volume
      .btn-group.dropdown.volume-dropdown
        %button{type: 'button', class:"btn btn-left btn-default dropdown-toggle", 'data-toggle' => "dropdown", 'aria-expanded' => false}
          %i.fa.fa-lg.fa-fw{class: icon_class_for_volume(current_volume)}
          = t :"volume.#{current_volume}"
          %span.caret
        %ul.dropdown-menu.dropdown-menu-right{role: 'menu'}
          - %w[loud normal quiet mute].each do |volume|
            %li.dropdown-menu-item
              = link_to [:set_volume, @discussion, volume: volume], method: :post do
                %i.fa.fa-lg.fa-fw{class: icon_class_for_volume(volume)}
                %b= t(:"volume.#{volume}")
                %p= t(:"discussion_volume.#{volume}_description")
    .discussion-additional-info
      = t("discussion_context.started_html",
          when: time_ago_in_words(@discussion.created_at),
          who: @discussion.author.name,
          link: user_path(@discussion.author),
          link_class: 'user-name')
      -if @discussion.has_previous_versions?
        .last-edited-by
          = link_to t(:"common.edited", when: time_ago_in_words(@discussion.last_versioned_at)), show_description_history_discussion_path(@discussion), :method => :post, :class => "see-description-history", :remote => true



#description-revision-history.modal
