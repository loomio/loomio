%section.context-panel.lmo-action-dock-wrapper{aria-label: "{{ 'thread_context.aria_label' | translate }}"}
  .context-panel__top
    .context-panel__pin{ng-if: "discussion.pinned", title: "{{'dashboard_page.thread_preview.pinned' | translate}}"}
      %i.mdi.mdi-pin

    .context-panel__h1.lmo-flex__grow{in-view: "showLintel(!$inview)"}
      %h1.lmo-h1.context-panel__heading{ng-if: "!translation"}
        {{discussion.title}}
      %h1.lmo-h1{ng-if: "translation"}
        %translation{translation: "translation", field: "title"}

    .context-panel__thread-actions.pull-right.lmo-no-print
      %outlet.context-panel__before-thread-actions{name: "before-thread-actions", model: "discussion"}
      %md-menu.lmo-dropdown-menu{ng-if: "showContextMenu()", md-position-mode: "target-right target"}
        %md-button.context-panel__dropdown-button{ng-click: "$mdMenu.open()"}
          .sr-only{translate: "thread_context.thread_options"}
          %i.mdi.mdi-24px.mdi-chevron-down
        %md-menu-content
          %md-menu-item.context-panel__dropdown-options--email-settings{ng-if: "canChangeVolume()"}
            %md-button{ng-click: "openChangeVolumeForm()", translate: "thread_context.email_settings"}
          %md-menu-item.context-panel__dropdown-options--edit{ng-if: "canEditThread()"}
            %md-button{ng-click: "editThread()", translate: "thread_context.edit"}
          %md-menu-item.context-panel__dropdown-options--pin{ng-show: "!discussion.pinned && canPinThread()"}
            %md-button{ng-click: "pinThread()", translate: "thread_context.pin_thread"}
          %md-menu-item.context-panel__dropdown-options--pin{ng-show: "discussion.pinned && canPinThread()"}
            %md-button{ng-click: "unpinThread()", translate: "thread_context.unpin_thread"}
          %md-menu-item.context-panel__dropdown-options--mute{ng-show: "!discussion.isMuted()"}
            %md-button{ng-click: "muteThread()", translate: "volume_levels.mute"}
          %md-menu-item.context-panel__dropdown-options--unmute{ng-show: "discussion.isMuted()"}
            %md-button{ng-click: "unmuteThread()", translate: "volume_levels.unmute"}
          %md-menu-item.context-panel__dropdown-options--move{ng-if: "canMoveThread()"}
            %md-button{ng-click: "moveThread()", translate: "thread_context.move_thread"}
          %md-menu-item
            %md-button{ng-click: "requestPagePrinted()", translate: "thread_context.print_thread"}
          %md-menu-item.context-panel__dropdown-options--delete{ng-if: "canDeleteThread()"}
            %md-button{ng-click: "deleteThread()", translate: "thread_context.delete_thread"}

  .context-panel__details.md-body-1
    %span{translate: "discussion.started_by", translate-value-name: "{{::discussion.authorName()}}"}
    %timeago.nowrap{timestamp: "::discussion.createdAt" }>
    %span{aria-hidden: "true"}Â·
    %span.nowrap.context-panel__discussion-privacy.context-panel__discussion-privacy--private{ng-show: "discussion.private"}>
      %i.mdi.mdi-lock-outline>
      %span{translate: "common.privacy.private"}
    %span.nowrap.context-panel__discussion-privacy.context-panel__discussion-privacy--public{ng-show: "!discussion.private"}>
      %i.mdi.mdi-earth>
      %span{translate: "common.privacy.public"}
    %outlet{name: "after-thread-title", model: "discussion"}

  .context-panel__description.lmo-markdown-wrapper{ng-if: "!translation", marked: "discussion.cookedDescription()", aria-label: "{{ 'thread_context.aria_label' | translate }}" }
  %translation.lmo-markdown-wrapper{ng-if: "translation", translation: "translation", field: "description"}

  %attachment_collection{model: "discussion"}

  .lmo-md-actions
    %reactions_display.context-panel__actions-left{model: "discussion", load: "true"}
    %action_dock{model: "discussion", actions: "actions"}
