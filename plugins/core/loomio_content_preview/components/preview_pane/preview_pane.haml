.preview-pane.lmo-hidden{class: "preview-pane--{{type}}"}
  .lmo-hint-text.preview-pane--no-content{ng-if: "!model.hasDescription()", translate: "loomio_content_preview.preview_pane.no_content"}
  // for comment previews
  %div{ng-if: "model.hasDescription()", ng-switch: "type"}
    .thread-item__header.lmo-flex.lmo-flex__center{ng-switch-when: "comment"}
      %user_avatar.lmo-margin-right{user: "model.author()", size: "small"}
      %h3.new-comment__in-reply-to
        %strong> {{ model.authorName() }}
        %span{ng-if: "model.parentId", translate: "new_comment_item.in_reply_to", translate-value-recipient: "{{model.parentAuthorName}}"}
      .sr-only{ng-if: "!model.parentId", id: "event-{{event.id}}", translate: "new_comment_item.aria_label", translate-value-author: "{{model.authorName()}}"}
    .thread-item__body.new-comment__body.lmo-markdown-wrapper{ng-switch-when: "comment", marked: "model.cookedBody()"}

    // for context previews
    .lmo-markdown-wrapper{ng-switch-when: "discussion", marked: "model.cookedDescription()"}
    .lmo-markdown-wrapper{ng-switch-when: "poll", marked: "model.cookedDetails()"}
    .lmo-markdown-wrapper{ng-switch-when: "outcome", marked: "model.cookedStatement()"}
