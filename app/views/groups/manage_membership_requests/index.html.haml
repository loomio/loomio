- set_title @group.name, "", @group.parent
= render '/groups/title', group: @group

%h2=t :membership_requests
-if @current_requests.present?
  %table.table#membership-request-list
    -@current_requests.each do |request|
      %tr
        =render 'requestor', request: request
        %td
          =render_rich_text(request.introduction, false)
          %span.time-ago-subtle= t(:ago, quantity_of_time: time_ago_in_words(request.created_at))

        %td.approve-or-ignore
          =link_to approve_membership_request_path(request), method: :post, id: "approve-membership-request-#{request.id}", class: 'btn btn-primary btn-block' do
            =t(:approve)
          =link_to t(:ignore), ignore_membership_request_path(request), method: :post, id: "ignore-membership-request-#{request.id}", class: 'btn btn-default btn-block'
-else
  .no-current-requests= t(:no_pending_membership_requests)

%h2=t :previous_requests
%table.table
  - @previous_requests.each do |request|
    %tr
      =render 'requestor', request: request
      %td= render_rich_text(request.introduction, false)
      %td.col-md-2
        -responder = request.responder.name
        -case request.response
        -when 'approved'
          =t(:approved_by_person, person: responder)
        -when 'ignored'
          =t(:ignored_by_person, person: responder)
        %span.time-ago-subtle= t(:ago, quantity_of_time: time_ago_in_words(request.responded_at))
= paginate @previous_requests
