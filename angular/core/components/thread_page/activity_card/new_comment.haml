.thread-item.thread-item--comment{ng_controller: "NewCommentItemController", id: "comment-{{comment.id}}" }

  %md-menu.lmo-dropdown-menu.lmo-no-print.pull-right{ng-if: "showContextMenu()", md-position-mode: "target-right target"}
    %md-button{ng-click: "$mdMenu.open()"}
      .sr-only{translate: "new_comment_item.context_menu.aria_label"}
      %i.material-icons expand_more
    %md-menu-content
      %md-menu-item{ng-if: "canEditComment()"}
        %md-button{ng-click: "editComment()", translate: "common.action.edit"}
      %md-menu-item{ng-if: "canDeleteComment()"}
        %md-button{ng-click: "deleteComment()", translate: "common.action.delete"}
  %outlet.lmo-relative.pull-right{name: "before-comment-dropdown", model: "comment"}

  .thread-item__header.media
    .media-left
      %user_avatar{user: "comment.author()", size: "small"}
    .media-body
      %h3.new-comment__in-reply-to{ng-if: "comment.parentId", id: "event-{{event.id}}"}
        %strong
          %a{lmo-href-for: "comment.author()"}> {{ comment.authorName() }}
        %span{translate: "new_comment_item.in_reply_to", translate-value-recipient: "{{comment.parentAuthorName}}"}
      %h3.new-comment__author-name{ng-if: "!comment.parentId"}
        %a{lmo-href-for: "comment.author()"}> {{ comment.authorName() }}
      .sr-only{ng-if: "!comment.parentId", id: "event-{{event.id}}", translate: "new_comment_item.aria_label", translate-value-author: "{{comment.authorName()}}"}

  .thread-item__body.new-comment__body.lmo-markdown-wrapper{marked: "comment.cookedBody()"}
  %translation.thread-item__body{ng-if: "translation", translation: "translation", field: "body"}

  %outlet{name: "after-comment-body", model: "comment"}

  .thread-item__attachments
    .thread-item__attachment{ng-repeat: "attachment in comment.attachments() | orderBy:'createdAt' track by attachment.id"}
      %attachment_preview{attachment: "attachment", mode: "thread"}

  .thread-item__footer.new-comment__footer
    .thread-item__actions{ng-if: "showCommentActions()"}
      %button.thread-item__action.thread-item__action--like.lmo-no-print{tabindex: 0, type: "button", translate: "common.action.like", ng-show: "!currentUserLikesIt()", ng-click: "like()"}>
      %button.thread-item__action.thread-item__action--unlike.lmo-no-print{tabindex: 0, type: "button", translate: "common.action.unlike", ng-click: "unlike()", ng-show: "currentUserLikesIt()"}>
      %span.lmo-no-print{aria-hidden: "true"}>·
      %button.thread-item__action.thread-item__action--reply.lmo-no-print{translate: "common.action.reply", type: "button", ng_click: "reply()"}>
      %translate_button.lmo-no-print{model: "comment", showdot: "true"}
      %span.lmo-no-print{aria-hidden: "true"}>·
    .thread-item__actions
      %a{lmo-href-for: "comment"}>
        %timeago{timestamp: "comment.createdAt" }>
      %span.md-caption{ng-if: "comment.edited()"}
        %span{aria-hidden: "true"}·
        %button.thread-item__action--view-edits{ng-click: "showRevisionHistory()", translate: "new_comment_item.edited"}>

    .clearfix
    %outlet{name: "after-comment-event", model: "comment"}
    .thread-item__liked-by{ng_show: "anybodyLikesIt()"}
      {{ likedBySentence }}
